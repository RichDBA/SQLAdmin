
SELECT SCHEMA_NAME(FK.SCHEMA_ID) AS [SCHEMA_NAME], OBJECT_NAME(FK.PARENT_OBJECT_ID) AS TABLE_NAME, AC.NAME AS COLUMN_NAME,
CASE WHEN is_not_trusted = 0 THEN 'TRUSTED' ELSE 'NOT TRUSTED' END AS FK_TRUST, FK.NAME AS FK_NAME
--, 'FOREIGN KEY '+ FK.NAME+' HAS NO INDEX',  FK.PARENT_OBJECT_ID
--,FK.*
FROM SYS.FOREIGN_KEYS FK
       INNER JOIN SYS.FOREIGN_KEY_COLUMNS FKC
ON FK.OBJECT_ID = FKC.CONSTRAINT_OBJECT_ID  
       INNER JOIN SYS.ALL_COLUMNS AC
ON FK.PARENT_OBJECT_ID = AC.OBJECT_ID
       AND FKC.PARENT_COLUMN_ID = AC.COLUMN_ID
       LEFT OUTER JOIN SYS.INDEX_COLUMNS IC
ON IC.OBJECT_ID=FKC.PARENT_OBJECT_ID
       AND IC.COLUMN_ID=FKC.PARENT_COLUMN_ID
       AND FKC.CONSTRAINT_COLUMN_ID=IC.KEY_ORDINAL
WHERE is_not_trusted=1--IC.OBJECT_ID IS NULL 
ORDER BY FK.SCHEMA_ID, FK.NAME

	  --ALTER TABLE AdministrationSecurity WITH CHECK CHECK CONSTRAINT FK_AdministrationSecurity_Role

--SELECT AdministrationSecurity.RoleID
--FROM AdministrationSecurity LEFT JOIN Role ON AdministrationSecurity.RoleID = role.RoleID
--WHERE role.RoleID IS NULL; 



--SELECT child.parent_id
--FROM child LEFT JOIN parent ON child.parent_id = parent.parent_id
--WHERE parent.parent_id IS NULL; 
